# coding: utf-8

"""
    clevermaps-client

    CleverMaps REST API provides access to location intelligence and geospatial analytics platform.  ### Main capabilities include: - Project and user access management - Multidimensional data model and metrics management - Data upload and exports - Ad-hoc analysis of geospatial data - Full text and geographic search - Configuration of CleverMaps Studio visualizations 

    The version of the OpenAPI document: 1.0.0
    Contact: support@clevermaps.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr, field_validator
from typing import Optional
from typing_extensions import Annotated
from cm_python_openapi_sdk.models.dwh_property_values_request import DwhPropertyValuesRequest
from cm_python_openapi_sdk.models.property_values_response import PropertyValuesResponse
from cm_python_openapi_sdk.models.queries_response import QueriesResponse

from cm_python_openapi_sdk.api_client import ApiClient, RequestSerialized
from cm_python_openapi_sdk.api_response import ApiResponse
from cm_python_openapi_sdk.rest import RESTResponseType


class PropertyValuesApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def accept_property_values(
        self,
        project_id: Annotated[str, Field(strict=True, description="Id of the project")],
        dwh_cluster_id: Annotated[str, Field(strict=True, description="Id of the dwh cluster")],
        dwh_property_values_request: DwhPropertyValuesRequest,
        size: Annotated[Optional[Annotated[int, Field(le=20000, strict=True, ge=1)]], Field(description="The count of records to return for one page")] = None,
        page: Annotated[Optional[Annotated[int, Field(strict=True, ge=0)]], Field(description="Number of the page")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Name of the attribute to use for sorting the results, together with direction (asc or desc)")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> QueriesResponse:
        """Accept property values

        Gets list of distinct values of given dataset's property. The property is set by mandatory request body attribute `property`. The distinct values are returned as pageable response. By default, the values are ordered ascending by the property value. Optionaly the sort order can be changed and the values can be sorted by another propety (eg. sort day of week by day id instead of day name).  This resource is typically used for fetching of the multiSelect and singleSelect filter content.  This request starts an asynchronous action, which computes the property values result and returns the location URI of the result in `location` response header. To get the result, client must make another GET request on this URI (see [getPropertyValues](#operation/getPropertyValues)). 

        :param project_id: Id of the project (required)
        :type project_id: str
        :param dwh_cluster_id: Id of the dwh cluster (required)
        :type dwh_cluster_id: str
        :param dwh_property_values_request: (required)
        :type dwh_property_values_request: DwhPropertyValuesRequest
        :param size: The count of records to return for one page
        :type size: int
        :param page: Number of the page
        :type page: int
        :param sort: Name of the attribute to use for sorting the results, together with direction (asc or desc)
        :type sort: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._accept_property_values_serialize(
            project_id=project_id,
            dwh_cluster_id=dwh_cluster_id,
            dwh_property_values_request=dwh_property_values_request,
            size=size,
            page=page,
            sort=sort,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': "QueriesResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def accept_property_values_with_http_info(
        self,
        project_id: Annotated[str, Field(strict=True, description="Id of the project")],
        dwh_cluster_id: Annotated[str, Field(strict=True, description="Id of the dwh cluster")],
        dwh_property_values_request: DwhPropertyValuesRequest,
        size: Annotated[Optional[Annotated[int, Field(le=20000, strict=True, ge=1)]], Field(description="The count of records to return for one page")] = None,
        page: Annotated[Optional[Annotated[int, Field(strict=True, ge=0)]], Field(description="Number of the page")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Name of the attribute to use for sorting the results, together with direction (asc or desc)")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[QueriesResponse]:
        """Accept property values

        Gets list of distinct values of given dataset's property. The property is set by mandatory request body attribute `property`. The distinct values are returned as pageable response. By default, the values are ordered ascending by the property value. Optionaly the sort order can be changed and the values can be sorted by another propety (eg. sort day of week by day id instead of day name).  This resource is typically used for fetching of the multiSelect and singleSelect filter content.  This request starts an asynchronous action, which computes the property values result and returns the location URI of the result in `location` response header. To get the result, client must make another GET request on this URI (see [getPropertyValues](#operation/getPropertyValues)). 

        :param project_id: Id of the project (required)
        :type project_id: str
        :param dwh_cluster_id: Id of the dwh cluster (required)
        :type dwh_cluster_id: str
        :param dwh_property_values_request: (required)
        :type dwh_property_values_request: DwhPropertyValuesRequest
        :param size: The count of records to return for one page
        :type size: int
        :param page: Number of the page
        :type page: int
        :param sort: Name of the attribute to use for sorting the results, together with direction (asc or desc)
        :type sort: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._accept_property_values_serialize(
            project_id=project_id,
            dwh_cluster_id=dwh_cluster_id,
            dwh_property_values_request=dwh_property_values_request,
            size=size,
            page=page,
            sort=sort,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': "QueriesResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def accept_property_values_without_preload_content(
        self,
        project_id: Annotated[str, Field(strict=True, description="Id of the project")],
        dwh_cluster_id: Annotated[str, Field(strict=True, description="Id of the dwh cluster")],
        dwh_property_values_request: DwhPropertyValuesRequest,
        size: Annotated[Optional[Annotated[int, Field(le=20000, strict=True, ge=1)]], Field(description="The count of records to return for one page")] = None,
        page: Annotated[Optional[Annotated[int, Field(strict=True, ge=0)]], Field(description="Number of the page")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="Name of the attribute to use for sorting the results, together with direction (asc or desc)")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Accept property values

        Gets list of distinct values of given dataset's property. The property is set by mandatory request body attribute `property`. The distinct values are returned as pageable response. By default, the values are ordered ascending by the property value. Optionaly the sort order can be changed and the values can be sorted by another propety (eg. sort day of week by day id instead of day name).  This resource is typically used for fetching of the multiSelect and singleSelect filter content.  This request starts an asynchronous action, which computes the property values result and returns the location URI of the result in `location` response header. To get the result, client must make another GET request on this URI (see [getPropertyValues](#operation/getPropertyValues)). 

        :param project_id: Id of the project (required)
        :type project_id: str
        :param dwh_cluster_id: Id of the dwh cluster (required)
        :type dwh_cluster_id: str
        :param dwh_property_values_request: (required)
        :type dwh_property_values_request: DwhPropertyValuesRequest
        :param size: The count of records to return for one page
        :type size: int
        :param page: Number of the page
        :type page: int
        :param sort: Name of the attribute to use for sorting the results, together with direction (asc or desc)
        :type sort: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._accept_property_values_serialize(
            project_id=project_id,
            dwh_cluster_id=dwh_cluster_id,
            dwh_property_values_request=dwh_property_values_request,
            size=size,
            page=page,
            sort=sort,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': "QueriesResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _accept_property_values_serialize(
        self,
        project_id,
        dwh_cluster_id,
        dwh_property_values_request,
        size,
        page,
        sort,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if project_id is not None:
            _path_params['projectId'] = project_id
        if dwh_cluster_id is not None:
            _path_params['dwhClusterId'] = dwh_cluster_id
        # process the query parameters
        if size is not None:
            
            _query_params.append(('size', size))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if dwh_property_values_request is not None:
            _body_params = dwh_property_values_request


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'bearerAuth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/projects/{projectId}/dwh/{dwhClusterId}/propertyValues',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_property_values(
        self,
        project_id: Annotated[str, Field(strict=True, description="Id of the project")],
        dwh_cluster_id: Annotated[str, Field(strict=True, description="Id of the dwh cluster")],
        dwh_cache_id: Annotated[str, Field(strict=True, description="Id of the dwh cache")],
        size: Annotated[Optional[Annotated[int, Field(le=20000, strict=True, ge=1)]], Field(description="The count of records to return for one page")] = None,
        page: Annotated[Optional[Annotated[int, Field(strict=True, ge=0)]], Field(description="Number of the page")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> PropertyValuesResponse:
        """Get property values

        Get the result of the asynchronous property values request submitted in [acceptPropertyValues](#operation/acceptPropertyValues).  This endpoint implements long polling - see details in [getQueries](#operation/getQueries). 

        :param project_id: Id of the project (required)
        :type project_id: str
        :param dwh_cluster_id: Id of the dwh cluster (required)
        :type dwh_cluster_id: str
        :param dwh_cache_id: Id of the dwh cache (required)
        :type dwh_cache_id: str
        :param size: The count of records to return for one page
        :type size: int
        :param page: Number of the page
        :type page: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_property_values_serialize(
            project_id=project_id,
            dwh_cluster_id=dwh_cluster_id,
            dwh_cache_id=dwh_cache_id,
            size=size,
            page=page,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PropertyValuesResponse",
            '404': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_property_values_with_http_info(
        self,
        project_id: Annotated[str, Field(strict=True, description="Id of the project")],
        dwh_cluster_id: Annotated[str, Field(strict=True, description="Id of the dwh cluster")],
        dwh_cache_id: Annotated[str, Field(strict=True, description="Id of the dwh cache")],
        size: Annotated[Optional[Annotated[int, Field(le=20000, strict=True, ge=1)]], Field(description="The count of records to return for one page")] = None,
        page: Annotated[Optional[Annotated[int, Field(strict=True, ge=0)]], Field(description="Number of the page")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[PropertyValuesResponse]:
        """Get property values

        Get the result of the asynchronous property values request submitted in [acceptPropertyValues](#operation/acceptPropertyValues).  This endpoint implements long polling - see details in [getQueries](#operation/getQueries). 

        :param project_id: Id of the project (required)
        :type project_id: str
        :param dwh_cluster_id: Id of the dwh cluster (required)
        :type dwh_cluster_id: str
        :param dwh_cache_id: Id of the dwh cache (required)
        :type dwh_cache_id: str
        :param size: The count of records to return for one page
        :type size: int
        :param page: Number of the page
        :type page: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_property_values_serialize(
            project_id=project_id,
            dwh_cluster_id=dwh_cluster_id,
            dwh_cache_id=dwh_cache_id,
            size=size,
            page=page,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PropertyValuesResponse",
            '404': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_property_values_without_preload_content(
        self,
        project_id: Annotated[str, Field(strict=True, description="Id of the project")],
        dwh_cluster_id: Annotated[str, Field(strict=True, description="Id of the dwh cluster")],
        dwh_cache_id: Annotated[str, Field(strict=True, description="Id of the dwh cache")],
        size: Annotated[Optional[Annotated[int, Field(le=20000, strict=True, ge=1)]], Field(description="The count of records to return for one page")] = None,
        page: Annotated[Optional[Annotated[int, Field(strict=True, ge=0)]], Field(description="Number of the page")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get property values

        Get the result of the asynchronous property values request submitted in [acceptPropertyValues](#operation/acceptPropertyValues).  This endpoint implements long polling - see details in [getQueries](#operation/getQueries). 

        :param project_id: Id of the project (required)
        :type project_id: str
        :param dwh_cluster_id: Id of the dwh cluster (required)
        :type dwh_cluster_id: str
        :param dwh_cache_id: Id of the dwh cache (required)
        :type dwh_cache_id: str
        :param size: The count of records to return for one page
        :type size: int
        :param page: Number of the page
        :type page: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_property_values_serialize(
            project_id=project_id,
            dwh_cluster_id=dwh_cluster_id,
            dwh_cache_id=dwh_cache_id,
            size=size,
            page=page,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PropertyValuesResponse",
            '404': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_property_values_serialize(
        self,
        project_id,
        dwh_cluster_id,
        dwh_cache_id,
        size,
        page,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if project_id is not None:
            _path_params['projectId'] = project_id
        if dwh_cluster_id is not None:
            _path_params['dwhClusterId'] = dwh_cluster_id
        if dwh_cache_id is not None:
            _path_params['dwhCacheId'] = dwh_cache_id
        # process the query parameters
        if size is not None:
            
            _query_params.append(('size', size))
            
        if page is not None:
            
            _query_params.append(('page', page))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'bearerAuth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/projects/{projectId}/dwh/{dwhClusterId}/propertyValues/{dwhCacheId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


