# coding: utf-8

"""
    clevermaps-client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cm_python_openapi_sdk.models.indicator_dto import IndicatorDTO

class TestIndicatorDTO(unittest.TestCase):
    """IndicatorDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IndicatorDTO:
        """Test IndicatorDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IndicatorDTO`
        """
        model = IndicatorDTO()
        if include_optional:
            return IndicatorDTO(
                id = '',
                name = 'awat5ikwowtta-3mh2lcafqw3zhes',
                type = 'dataset',
                title = '0',
                description = '',
                content = cm_python_openapi_sdk.models.indicator_content_dto.IndicatorContentDTO(
                    metric = '/rest/projects/8q6zgckec0l3o4gi/md/metrics?name=lcafqw3zheseh16mckwqaot6282x4vh6wt7cgd04d0gu12zwv6v61pi05te5cj19uo1-vud_-tc_vbqgp4vj0u4t9xwduicwsc', 
                    scale = 'standard', 
                    distribution = 'geometric', 
                    visualizations = cm_python_openapi_sdk.models.indicator_visualizations_dto.IndicatorVisualizationsDTO(
                        areas = True, 
                        grid = True, 
                        zones = True, 
                        line = True, 
                        dotmap = True, 
                        heatmap = True, 
                        dominance = True, 
                        heatmap_scale_factor = 1.337, ), 
                    format = cm_python_openapi_sdk.models.format_dto.FormatDTO(
                        type = 'number', 
                        fraction = 0, 
                        symbol = '', ), 
                    relations = cm_python_openapi_sdk.models.relations_dto.RelationsDTO(
                        type = 'self', 
                        reversed_metric = '/rest/projects/8q6zgckec0l3o4gi/md/metrics?name=lcafqw3zheseh16mckwqaot6282x4vh6wt7cgd04d0gu12zwv6v61pi05te5cj19uo1-vud_-tc_vbqgp4vj0u4t9xwduicwsc', ), 
                    scale_options = cm_python_openapi_sdk.models.scale_options_dto.ScaleOptionsDTO(
                        static = [
                            cm_python_openapi_sdk.models.static_scale_option_dto.StaticScaleOptionDTO(
                                dataset = '/rest/projects/8q6zgckec0l3o4gi/md/datasets?name=lcafqw3zheseh16mckwqaot6282x4vh6wt7cgd04d0gu12zwv6v61pi05te5cj19uo1-vud_-tc_vbqgp4vj0u4t9xwduicwsc', 
                                breaks = cm_python_openapi_sdk.models.static_scale_option_dto_breaks.StaticScaleOptionDTO_breaks(
                                    global = [
                                        1.337
                                        ], 
                                    selection = [
                                        1.337
                                        ], ), 
                                max_values = [
                                    cm_python_openapi_sdk.models.max_value_dto.MaxValueDTO(
                                        zoom = 2, )
                                    ], )
                            ], 
                        default_distribution = cm_python_openapi_sdk.models.default_distribution_dto.DefaultDistributionDTO(
                            range = [
                                1.337
                                ], 
                            display_intervals = [
                                1.337
                                ], ), ), )
            )
        else:
            return IndicatorDTO(
                name = 'awat5ikwowtta-3mh2lcafqw3zhes',
                title = '0',
                description = '',
                content = cm_python_openapi_sdk.models.indicator_content_dto.IndicatorContentDTO(
                    metric = '/rest/projects/8q6zgckec0l3o4gi/md/metrics?name=lcafqw3zheseh16mckwqaot6282x4vh6wt7cgd04d0gu12zwv6v61pi05te5cj19uo1-vud_-tc_vbqgp4vj0u4t9xwduicwsc', 
                    scale = 'standard', 
                    distribution = 'geometric', 
                    visualizations = cm_python_openapi_sdk.models.indicator_visualizations_dto.IndicatorVisualizationsDTO(
                        areas = True, 
                        grid = True, 
                        zones = True, 
                        line = True, 
                        dotmap = True, 
                        heatmap = True, 
                        dominance = True, 
                        heatmap_scale_factor = 1.337, ), 
                    format = cm_python_openapi_sdk.models.format_dto.FormatDTO(
                        type = 'number', 
                        fraction = 0, 
                        symbol = '', ), 
                    relations = cm_python_openapi_sdk.models.relations_dto.RelationsDTO(
                        type = 'self', 
                        reversed_metric = '/rest/projects/8q6zgckec0l3o4gi/md/metrics?name=lcafqw3zheseh16mckwqaot6282x4vh6wt7cgd04d0gu12zwv6v61pi05te5cj19uo1-vud_-tc_vbqgp4vj0u4t9xwduicwsc', ), 
                    scale_options = cm_python_openapi_sdk.models.scale_options_dto.ScaleOptionsDTO(
                        static = [
                            cm_python_openapi_sdk.models.static_scale_option_dto.StaticScaleOptionDTO(
                                dataset = '/rest/projects/8q6zgckec0l3o4gi/md/datasets?name=lcafqw3zheseh16mckwqaot6282x4vh6wt7cgd04d0gu12zwv6v61pi05te5cj19uo1-vud_-tc_vbqgp4vj0u4t9xwduicwsc', 
                                breaks = cm_python_openapi_sdk.models.static_scale_option_dto_breaks.StaticScaleOptionDTO_breaks(
                                    global = [
                                        1.337
                                        ], 
                                    selection = [
                                        1.337
                                        ], ), 
                                max_values = [
                                    cm_python_openapi_sdk.models.max_value_dto.MaxValueDTO(
                                        zoom = 2, )
                                    ], )
                            ], 
                        default_distribution = cm_python_openapi_sdk.models.default_distribution_dto.DefaultDistributionDTO(
                            range = [
                                1.337
                                ], 
                            display_intervals = [
                                1.337
                                ], ), ), ),
        )
        """

    def testIndicatorDTO(self):
        """Test IndicatorDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
