# coding: utf-8

"""
    clevermaps-client

    CleverMaps REST API provides access to location intelligence and geospatial analytics platform.  ### Main capabilities include: - Project and user access management - Multidimensional data model and metrics management - Data upload and exports - Ad-hoc analysis of geospatial data - Full text and geographic search - Configuration of CleverMaps Studio visualizations 

    The version of the OpenAPI document: 1.0.0
    Contact: support@clevermaps.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cm_python_openapi_sdk.models.indicator_response_dto import IndicatorResponseDTO

class TestIndicatorResponseDTO(unittest.TestCase):
    """IndicatorResponseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IndicatorResponseDTO:
        """Test IndicatorResponseDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IndicatorResponseDTO`
        """
        model = IndicatorResponseDTO()
        if include_optional:
            return IndicatorResponseDTO(
                id = '',
                name = 'awat5ikwowtta-3mh2lcafqw3zhes',
                type = 'dataset',
                title = '0',
                description = '',
                content = {scaleOptions={static=[{breaks={selection=[5.962133916683182, 5.962133916683182], global=[1.4658129805029452, 1.4658129805029452]}, dataset=dataset, maxValues=[{selection=0.7061401241503109, zoom=11, global=0.23021358869347652}, {selection=0.7061401241503109, zoom=11, global=0.23021358869347652}]}, {breaks={selection=[5.962133916683182, 5.962133916683182], global=[1.4658129805029452, 1.4658129805029452]}, dataset=dataset, maxValues=[{selection=0.7061401241503109, zoom=11, global=0.23021358869347652}, {selection=0.7061401241503109, zoom=11, global=0.23021358869347652}]}], defaultDistribution={displayIntervals=[2.027123023002322, 2.027123023002322], breaks=[3.616076749251911, 3.616076749251911], range=[9.301444243932576, 9.301444243932576]}}, visualizations={heatmap=true, heatmapScaleFactor=0.8008281904610115, dotmap=true, grid=true, line=true, areas=true, dominance=true, zones=true}, metric=metric, format={symbol=symbol, type=number, fraction=0}, scale=standard, distribution=geometric, relations={reversedMetric=reversedMetric, type=self}},
                links = [
                    None
                    ],
                page = {number=1, size=0, totalPages=6, totalElements=},
                access_info = {createdAt=createdAt, createdBy=createdBy, modifiedAt=modifiedAt, modifiedBy=modifiedBy},
                version = 56
            )
        else:
            return IndicatorResponseDTO(
                name = 'awat5ikwowtta-3mh2lcafqw3zhes',
                title = '0',
                description = '',
                content = {scaleOptions={static=[{breaks={selection=[5.962133916683182, 5.962133916683182], global=[1.4658129805029452, 1.4658129805029452]}, dataset=dataset, maxValues=[{selection=0.7061401241503109, zoom=11, global=0.23021358869347652}, {selection=0.7061401241503109, zoom=11, global=0.23021358869347652}]}, {breaks={selection=[5.962133916683182, 5.962133916683182], global=[1.4658129805029452, 1.4658129805029452]}, dataset=dataset, maxValues=[{selection=0.7061401241503109, zoom=11, global=0.23021358869347652}, {selection=0.7061401241503109, zoom=11, global=0.23021358869347652}]}], defaultDistribution={displayIntervals=[2.027123023002322, 2.027123023002322], breaks=[3.616076749251911, 3.616076749251911], range=[9.301444243932576, 9.301444243932576]}}, visualizations={heatmap=true, heatmapScaleFactor=0.8008281904610115, dotmap=true, grid=true, line=true, areas=true, dominance=true, zones=true}, metric=metric, format={symbol=symbol, type=number, fraction=0}, scale=standard, distribution=geometric, relations={reversedMetric=reversedMetric, type=self}},
        )
        """

    def testIndicatorResponseDTO(self):
        """Test IndicatorResponseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
