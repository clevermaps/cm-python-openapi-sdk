# coding: utf-8

"""
    clevermaps-client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cm_python_openapi_sdk.models.bulk_point_query_job_request import BulkPointQueryJobRequest

class TestBulkPointQueryJobRequest(unittest.TestCase):
    """BulkPointQueryJobRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BulkPointQueryJobRequest:
        """Test BulkPointQueryJobRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BulkPointQueryJobRequest`
        """
        model = BulkPointQueryJobRequest()
        if include_optional:
            return BulkPointQueryJobRequest(
                type = 'E',
                project_id = 'w8q6zgckec0l3o4g',
                content = cm_python_openapi_sdk.models.bulk_point_query_request.BulkPointQueryRequest(
                    enable_billing = True, 
                    points = [
                        cm_python_openapi_sdk.models.bulk_point_query_request_points_inner.BulkPointQueryRequest_points_inner(
                            id = '', 
                            lat = 1.337, 
                            lng = 1.337, )
                        ], 
                    point_queries = [
                        cm_python_openapi_sdk.models.bulk_point_query_request_point_queries_inner.BulkPointQueryRequest_pointQueries_inner(
                            query_id = '', 
                            type = 'isochrone', 
                            options = null, 
                            dataset = '', 
                            execution_content = cm_python_openapi_sdk.models.execution_content.executionContent(), 
                            properties = [
                                None
                                ], 
                            filter_by = [
                                None
                                ], 
                            result_set_filter = [
                                None
                                ], 
                            having = [
                                None
                                ], 
                            order_by = [
                                None
                                ], 
                            variables = [
                                None
                                ], 
                            limit = 56, )
                        ], )
            )
        else:
            return BulkPointQueryJobRequest(
                type = 'E',
                project_id = 'w8q6zgckec0l3o4g',
                content = cm_python_openapi_sdk.models.bulk_point_query_request.BulkPointQueryRequest(
                    enable_billing = True, 
                    points = [
                        cm_python_openapi_sdk.models.bulk_point_query_request_points_inner.BulkPointQueryRequest_points_inner(
                            id = '', 
                            lat = 1.337, 
                            lng = 1.337, )
                        ], 
                    point_queries = [
                        cm_python_openapi_sdk.models.bulk_point_query_request_point_queries_inner.BulkPointQueryRequest_pointQueries_inner(
                            query_id = '', 
                            type = 'isochrone', 
                            options = null, 
                            dataset = '', 
                            execution_content = cm_python_openapi_sdk.models.execution_content.executionContent(), 
                            properties = [
                                None
                                ], 
                            filter_by = [
                                None
                                ], 
                            result_set_filter = [
                                None
                                ], 
                            having = [
                                None
                                ], 
                            order_by = [
                                None
                                ], 
                            variables = [
                                None
                                ], 
                            limit = 56, )
                        ], ),
        )
        """

    def testBulkPointQueryJobRequest(self):
        """Test BulkPointQueryJobRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
