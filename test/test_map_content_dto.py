# coding: utf-8

"""
    clevermaps-client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.map_content_dto import MapContentDTO

class TestMapContentDTO(unittest.TestCase):
    """MapContentDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MapContentDTO:
        """Test MapContentDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MapContentDTO`
        """
        model = MapContentDTO()
        if include_optional:
            return MapContentDTO(
                options = openapi_client.models.map_content_dto_options.MapContentDTO_options(
                    center = openapi_client.models.center_dto.CenterDTO(
                        lat = 1.337, 
                        lng = 1.337, ), 
                    zoom = 56, 
                    min_zoom = 0, 
                    max_zoom = 56, ),
                base_layer = openapi_client.models.map_content_dto_base_layer.MapContentDTO_baseLayer(
                    menu = True, 
                    type = 'mapbox', 
                    url = 'mapbox://styles/jUR,rZ#UM/?R,Fp^l6$ARj', 
                    access_token = '', ),
                context_menu = openapi_client.models.map_context_menu_dto.MapContextMenuDTO(
                    items = [
                        null
                        ], ),
                layers = [
                    openapi_client.models.layer_dto.LayerDTO(
                        name = 'awat5ikwowtta-3mh2lcafqw3zhes', 
                        indicator = 'inherit', 
                        base_style = openapi_client.models.style_dto.StyleDTO(
                            fill_color = 'purple', 
                            fill_hex_color = '#62ECB0', 
                            fill_opacity = 1.337, 
                            outline_color = 'purple', 
                            outline_hex_color = '#62ECB0', 
                            outline_opacity = 1.337, 
                            outline_width = 1.337, 
                            size = 1.337, ), 
                        show_indicator_value_labels = True, 
                        cluster_points = True, 
                        keep_filtered = True, 
                        visible = True, 
                        default_dataset = '/rest/projects/8q6zgckec0l3o4gi/md/datasets?name=lcafqw3zheseh16mckwqaot6282x4vh6wt7cgd04d0gu12zwv6v61pi05te5cj19uo1-vud_-tc_vbqgp4vj0u4t9xwduicwsc', 
                        default_visualization = 'dotmap', 
                        datasets = [
                            openapi_client.models.layer_dto_datasets_inner.LayerDTO_datasets_inner(
                                dataset = '/rest/projects/8q6zgckec0l3o4gi/md/datasets?name=lcafqw3zheseh16mckwqaot6282x4vh6wt7cgd04d0gu12zwv6v61pi05te5cj19uo1-vud_-tc_vbqgp4vj0u4t9xwduicwsc', 
                                visualization = 'dotmap', 
                                attribute_styles = [
                                    openapi_client.models.layer_dto_datasets_inner_attribute_styles_inner.LayerDTO_datasets_inner_attributeStyles_inner(
                                        attribute_style = '/rest/projects/8q6zgckec0l3o4gi/md/attributeStyles?name=lcafqw3zheseh16mckwqaot6282x4vh6wt7cgd04d0gu12zwv6v61pi05te5cj19uo1-vud_-tc_vbqgp4vj0u4t9xwduicwsc', )
                                    ], )
                            ], )
                    ]
            )
        else:
            return MapContentDTO(
        )
        """

    def testMapContentDTO(self):
        """Test MapContentDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
