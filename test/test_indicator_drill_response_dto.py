# coding: utf-8

"""
    clevermaps-client

    CleverMaps REST API provides access to location intelligence and geospatial analytics platform.  ### Main capabilities include: - Project and user access management - Multidimensional data model and metrics management - Data upload and exports - Ad-hoc analysis of geospatial data - Full text and geographic search - Configuration of CleverMaps Studio visualizations 

    The version of the OpenAPI document: 1.0.0
    Contact: support@clevermaps.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cm_python_openapi_sdk.models.indicator_drill_response_dto import IndicatorDrillResponseDTO

class TestIndicatorDrillResponseDTO(unittest.TestCase):
    """IndicatorDrillResponseDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IndicatorDrillResponseDTO:
        """Test IndicatorDrillResponseDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IndicatorDrillResponseDTO`
        """
        model = IndicatorDrillResponseDTO()
        if include_optional:
            return IndicatorDrillResponseDTO(
                id = '',
                name = 'awat5ikwowtta-3mh2lcafqw3zhes',
                type = 'dataset',
                title = '0',
                description = '',
                content = {blocks=[{indicator=indicator, filterable=true, visualized=true, collapsed=true, hideNullItems=true, description=description, orderBy={property=property, direction=asc}, condensed=true, vertical=true, label=label, type=categories, title=title, sizeLimit=0, dualProperty=dualProperty, splitProperty=splitProperty, attributeStyle=attributeStyle, dualAttributeStyle=dualAttributeStyle}, {indicator=indicator, filterable=true, visualized=true, collapsed=true, hideNullItems=true, description=description, orderBy={property=property, direction=asc}, condensed=true, vertical=true, label=label, type=categories, title=title, sizeLimit=0, dualProperty=dualProperty, splitProperty=splitProperty, attributeStyle=attributeStyle, dualAttributeStyle=dualAttributeStyle}]},
                links = [
                    None
                    ],
                page = {number=1, size=0, totalPages=6, totalElements=},
                access_info = {createdAt=createdAt, createdBy=createdBy, modifiedAt=modifiedAt, modifiedBy=modifiedBy},
                version = 56
            )
        else:
            return IndicatorDrillResponseDTO(
                name = 'awat5ikwowtta-3mh2lcafqw3zhes',
                content = {blocks=[{indicator=indicator, filterable=true, visualized=true, collapsed=true, hideNullItems=true, description=description, orderBy={property=property, direction=asc}, condensed=true, vertical=true, label=label, type=categories, title=title, sizeLimit=0, dualProperty=dualProperty, splitProperty=splitProperty, attributeStyle=attributeStyle, dualAttributeStyle=dualAttributeStyle}, {indicator=indicator, filterable=true, visualized=true, collapsed=true, hideNullItems=true, description=description, orderBy={property=property, direction=asc}, condensed=true, vertical=true, label=label, type=categories, title=title, sizeLimit=0, dualProperty=dualProperty, splitProperty=splitProperty, attributeStyle=attributeStyle, dualAttributeStyle=dualAttributeStyle}]},
        )
        """

    def testIndicatorDrillResponseDTO(self):
        """Test IndicatorDrillResponseDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
