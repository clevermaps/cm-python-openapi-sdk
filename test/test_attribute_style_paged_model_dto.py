# coding: utf-8

"""
    clevermaps-client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cm_python_openapi_sdk.models.attribute_style_paged_model_dto import AttributeStylePagedModelDTO

class TestAttributeStylePagedModelDTO(unittest.TestCase):
    """AttributeStylePagedModelDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AttributeStylePagedModelDTO:
        """Test AttributeStylePagedModelDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AttributeStylePagedModelDTO`
        """
        model = AttributeStylePagedModelDTO()
        if include_optional:
            return AttributeStylePagedModelDTO(
                content = [
                    cm_python_openapi_sdk.models.attribute_style_dto.AttributeStyleDTO(
                        id = '', 
                        name = 'awat5ikwowtta-3mh2lcafqw3zhes', 
                        type = 'dataset', 
                        title = '0', 
                        description = '', 
                        content = cm_python_openapi_sdk.models.attribute_style_content_dto.AttributeStyleContentDTO(
                            property = 'awat5ikwowtta-3mh2lcafqw3zhes.i16mckwqaot6282x4vh6wt7cgd04d0gu12zwv6v61pi05te5cj19uo1-vud_-tc_vbqgp4vj0u4t9xwduicwscq-4zge8f37mn0', 
                            fallback_category = cm_python_openapi_sdk.models.attribute_style_fallback_category_dto.AttributeStyleFallbackCategoryDTO(
                                title = '0', 
                                style = cm_python_openapi_sdk.models.style_dto.StyleDTO(
                                    fill_color = 'purple', 
                                    fill_hex_color = '#62ECB0', 
                                    fill_opacity = 1.337, 
                                    outline_color = 'purple', 
                                    outline_hex_color = '#62ECB0', 
                                    outline_opacity = 1.337, 
                                    outline_width = 1.337, 
                                    size = 1.337, ), ), 
                            categories = [
                                cm_python_openapi_sdk.models.attribute_style_category_dto.AttributeStyleCategoryDTO(
                                    title = '0', 
                                    value = null, 
                                    style = cm_python_openapi_sdk.models.style_dto.StyleDTO(
                                        fill_color = 'purple', 
                                        fill_hex_color = '#62ECB0', 
                                        fill_opacity = 1.337, 
                                        outline_color = 'purple', 
                                        outline_hex_color = '#62ECB0', 
                                        outline_opacity = 1.337, 
                                        outline_width = 1.337, 
                                        size = 1.337, ), )
                                ], ), )
                    ],
                links = [
                    None
                    ],
                page = cm_python_openapi_sdk.models.mandatory_keys_for_pagable_response.mandatory keys for pagable response(
                    size = 56, 
                    total_elements = null, 
                    total_pages = 56, 
                    number = 56, )
            )
        else:
            return AttributeStylePagedModelDTO(
        )
        """

    def testAttributeStylePagedModelDTO(self):
        """Test AttributeStylePagedModelDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
