# coding: utf-8

"""
    clevermaps-client

    CleverMaps REST API provides access to location intelligence and geospatial analytics platform.  ### Main capabilities include: - Project and user access management - Multidimensional data model and metrics management - Data upload and exports - Ad-hoc analysis of geospatial data - Full text and geographic search - Configuration of CleverMaps Studio visualizations 

    The version of the OpenAPI document: 1.0.0
    Contact: support@clevermaps.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cm_python_openapi_sdk.models.data_pull_request import DataPullRequest

class TestDataPullRequest(unittest.TestCase):
    """DataPullRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DataPullRequest:
        """Test DataPullRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DataPullRequest`
        """
        model = DataPullRequest()
        if include_optional:
            return DataPullRequest(
                dataset = '0',
                mode = 'full',
                type = 'csv',
                upload = '',
                s3_upload = cm_python_openapi_sdk.models.data_pull_request_s3_upload.DataPullRequest_s3Upload(
                    uri = '', 
                    access_key_id = '', 
                    secret_access_key = '', 
                    region = '', 
                    endpoint_override = '', 
                    force_path_style = True, ),
                https_upload = cm_python_openapi_sdk.models.data_pull_request_https_upload.DataPullRequest_httpsUpload(
                    url = '', ),
                csv_options = cm_python_openapi_sdk.models.data_pull_request_csv_options.DataPullRequest_csvOptions(
                    header = True, 
                    separator = '', 
                    quote = '', 
                    escape = '', 
                    null = '', 
                    force_null = [
                        ''
                        ], ),
                skip_refreshing_materialized_views = True
            )
        else:
            return DataPullRequest(
                dataset = '0',
                mode = 'full',
                type = 'csv',
        )
        """

    def testDataPullRequest(self):
        """Test DataPullRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
